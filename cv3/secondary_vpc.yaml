
AWSTemplateFormatVersion: 2010-09-09

Description: secondary vpc

Parameters:
  VpcCidr:
    Description: VpcCidr
    Type: String
    Default: 10.222.0.0/16

  Environment:
    Description: Environment
    Type: String
    Default: lab

  Project:
    Description: Environment
    Type: String
    Default: FRI

  ImageId:
    Description: AMI (Amazon Machine Image) ID
    Type: String
    Default: ami-07761f3ae34c4478d

  InstanceType:
    Description: Instance type (number of vCPUs, memory, bandwidth, etc.)
    Type: String
    Default: t3.medium

  IamInstanceProfileName:
    Description: Instance IAM profile name
    Type: String
    Default: c112506a2668173l5904975t1w339712963453-SsmRoleInstanceProfile-h3TaBZbRWJpG

  NetworkStackName:
    Description: Name of parent network CloudFormation stack
    Type: String
    Default: basic-network

  PublicSubnetCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 10

  PrivateSubnetCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 11


Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - { Key: Name, Value: !Join [ '-', [!Ref Environment, vpc_secondary] ] }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - { Key: Name, Value: Igw_secondary }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  VpcPeering:
    DependsOn: Vpc
    Type: AWS::EC2::VPCPeeringConnection
    Properties: 
      PeerVpcId: 
        Fn::ImportValue: !Sub ${NetworkStackName}-VpcId
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: vpcpeering }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

###################################################################

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PrivateSubnetCidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - { Key: Name, Value: PrivateSubnet_secondary }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: PrivateRouteTable_secondary }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  RouteToPrimaryVPC:
    DependsOn: VpcPeering
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTable
        DestinationCidrBlock: 
          Fn::ImportValue: !Sub '${NetworkStackName}-VpcCidr'
        VpcPeeringConnectionId: !Ref VpcPeering

#################################################
#################################################
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private Security Group
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - { IpProtocol: tcp, FromPort: 22,   ToPort: 22,   CidrIp:  { Fn::ImportValue: !Sub '${NetworkStackName}-VpcCidr' }, Description: Home IP - SSH }
        - { IpProtocol: icmp, FromPort: -1,   ToPort: -1,   CidrIp:  { Fn::ImportValue: !Sub '${NetworkStackName}-VpcCidr' }, Description: Home IP - SSH }
      SecurityGroupEgress:
        - { IpProtocol: tcp, FromPort: 22,  ToPort: 22,  CidrIp: 0.0.0.0/0, Description: HTTPS }
      Tags:
        - { Key: Name, Value: PrivateSG_secondary }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateInstanceA:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
#     KeyName: !Ref SSHKeyPairPrivate
      IamInstanceProfile: !Ref IamInstanceProfileName
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash

            echo 1 > /proc/sys/net/ipv4/ip_forward

            echo "Hello world."
            echo "This instance was created in environment ${Environment} in region ${AWS::Region}"

          - Environment: !Ref Environment
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: 30
            Encrypted: true
      Tags:
        - Key: Name
          Value: PrivateInstance_secondaryVPC
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project


